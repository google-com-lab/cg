// PRACTICAL 1: Blinking LED

int led1;
int led2;
int led3;
int led4;

void setup() {
    pinMode(led1, OUTPUT);
    pinMode(led2, OUTPUT);
    pinMode(led3, OUTPUT);
    pinMode(led4, OUTPUT);
}

void HighLowAfterDelay(int pinNumber) {
    digitalWrite(pinNumber, HIGH);
    delay(500);
    digitalWrite(pinNumber, LOW);
    delay(500);
}

void loop() {
    HighLowAfterDelay(led1);
    HighLowAfterDelay(led2);
    HighLowAfterDelay(led3);
    HighLowAfterDelay(led4);
}

// PRACTICAL 2: Light Sensitive Sensor

const int photoresistorPin = A0;
const int ledPin = 9;

void setup() {
    pinMode(ledPin, OUTPUT);
    Serial.begin(9600);
}

void loop() {
    int lightValue = analogRead(photoresistorPin);
    Serial.println(lightValue);
    if (lightValue < 500) {
        digitalWrite(ledPin, HIGH);
    } else {
        digitalWrite(ledPin, LOW);
    }
}

// PRACTICAL 3: Temperature Sensor

int baselineTemp = 40;
int celsius;
int fahrenheit;

void setup() {
    pinMode(A0, INPUT);
    Serial.begin(9600);
    pinMode(2, OUTPUT);
    pinMode(3, OUTPUT);
    pinMode(4, OUTPUT);
}

void loop() {
    celsius = map(((analogRead(A0) - 20) * 3.04), 0, 1023, -40, 125);
    fahrenheit = ((celsius * 9) / 5) + 32;
    Serial.print(celsius);
    Serial.print("C ");
    Serial.print(fahrenheit);
    Serial.println("F");
    
    digitalWrite(2, celsius >= baselineTemp);
    digitalWrite(3, celsius >= baselineTemp + 10);
    digitalWrite(4, celsius >= baselineTemp + 20);
    delay(1000);
}

// PRACTICAL 4: PIR Sensor

int PIR_pin = 2;
int led1 = 3;

void setup() {
    Serial.begin(9600);
    pinMode(led1, OUTPUT);
}

void loop() {
    int motion = digitalRead(PIR_pin);
    if (motion) {
        Serial.println("Motion Detected");
        digitalWrite(led1, HIGH);
    } else {
        Serial.println("No Motion Detected");
        digitalWrite(led1, LOW);
    }
    delay(1000);
}

// PRACTICAL 5: Humidity Sensor

int analogInput = A1;
int humidityOutput;

void setup() {
    pinMode(A1, INPUT);
    Serial.begin(9600);
}

void loop() {
    humidityOutput = analogRead(analogInput);
    int humidityPercentage = map(humidityOutput, 0, 1023, 10, 70);
    Serial.print("Humidity: ");
    Serial.print(humidityPercentage);
    Serial.println("%");
    delay(500);
}

// PRACTICAL 6: Gas Sensor

int led1 = 10;
int GasSensor = A0;
const int SMOKE_THRESHOLD = 100;

void setup() {
    pinMode(led1, OUTPUT);
    pinMode(GasSensor, INPUT);
    Serial.begin(9600);
}

void loop() {
    int sensValue = analogRead(GasSensor);
    if (sensValue >= SMOKE_THRESHOLD) {
        Serial.println("Smoke Detected!");
        digitalWrite(led1, HIGH);
    } else {
        Serial.println("No Smoke!");
        digitalWrite(led1, LOW);
    }
    delay(2000);
}

// PRACTICAL 7: Ultrasonic Sensor

const int trigPin = 9;
const int echoPin = 10;
long duration;
int distance;

void setup() {
    Serial.begin(9600);
    pinMode(trigPin, OUTPUT);
    pinMode(echoPin, INPUT);
}

void loop() {
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);
    duration = pulseIn(echoPin, HIGH);
    distance = duration * 0.034 / 2;
    Serial.print("Distance: ");
    Serial.print(distance);
    Serial.println("cm");
    delay(1000);
}

// PRACTICAL 8: Servo Motor

#include <Servo.h>

Servo servoBase;

void setup() {
    servoBase.attach(A1);
    servoBase.write(0);
}

void loop() {
    for (int i = 0; i <= 180; i += 10) {
        servoBase.write(i);
        delay(1000);
    }
}

// PRACTICAL 9: Joystick Control

int LED_UP = 2;
int LED_DOWN = 3;
int LED_RIGHT = 4;
int LED_LEFT = 5;

void setup() {
    Serial.begin(9600);
    pinMode(LED_UP, OUTPUT);
    pinMode(LED_DOWN, OUTPUT);
    pinMode(LED_RIGHT, OUTPUT);
    pinMode(LED_LEFT, OUTPUT);
}

void loop() {
    int sumX = analogRead(A0);
    int sumY = analogRead(A1);
    int up = map(sumX, 511, 0, 0, 100);
    int down = map(sumX, 511, 1023, 0, 100);
    int left = map(sumY, 511, 0, 0, 100);
    int right = map(sumY, 511, 1023, 0, 100);
    digitalWrite(LED_UP, up > down);
    digitalWrite(LED_DOWN, down > up);
    digitalWrite(LED_RIGHT, right > left);
    digitalWrite(LED_LEFT, left > right);
    Serial.print("Up: "); Serial.print(up);
    Serial.print(" Down: "); Serial.print(down);
    Serial.print(" Right: "); Serial.print(right);
    Serial.print(" Left: "); Serial.println(left);
    delay(1000);
}
